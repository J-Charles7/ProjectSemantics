
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'mainNUMBER ID OPBIN LP RP LB RB EQUAL SEQ COMMA INT FLOAT RETURN WHILE MAIN PRINTexpression : NUMBER\n                | ID\n                | expression OPBIN expressioncommande : ID EQUAL expression\n                | commande SEQ commande\n                | WHILE LP expression RP LB commande RB\n    \n    declaration : INT ID\n                | FLOAT ID\n    \n    listedeclarations : declaration SEQ\n                      | declaration SEQ listedeclarations\n    \n    listeparamsmain : declaration\n                   | declaration COMMA listeparamsmain\n    \n    typeetmain : INT MAIN\n         | FLOAT MAIN\n    \n    main : typeetmain LP listeparamsmain RP LB listedeclarations commande SEQ PRINT LP expression RP SEQ RB\n    '
    
_lr_action_items = {'INT':([0,7,13,17,23,],[1,8,8,8,8,]),'NUMBER':([25,26,35,36,],[32,32,32,32,]),'SEQ':([12,15,19,20,28,30,31,32,39,41,42,44,],[-7,-8,23,24,34,-4,-2,-1,-3,43,34,-6,]),'OPBIN':([30,31,32,33,38,39,],[36,-2,-1,36,36,36,]),'COMMA':([9,12,15,],[13,-7,-8,]),'$end':([2,45,],[0,-15,]),'LP':([4,5,6,22,29,],[7,-13,-14,26,35,]),'LB':([14,37,],[17,40,]),'EQUAL':([21,],[25,]),'RB':([28,30,31,32,39,42,43,44,],[-5,-4,-2,-1,-3,44,45,-6,]),'ID':([8,11,18,23,24,25,26,27,34,35,36,40,],[12,15,21,-9,21,31,31,-10,21,31,31,21,]),'MAIN':([1,3,],[5,6,]),'RP':([9,10,12,15,16,31,32,33,38,39,],[-11,14,-7,-8,-12,-2,-1,37,41,-3,]),'PRINT':([24,],[29,]),'WHILE':([18,23,24,27,34,40,],[22,-9,22,-10,22,22,]),'FLOAT':([0,7,13,17,23,],[3,11,11,11,11,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'listedeclarations':([17,23,],[18,27,]),'declaration':([7,13,17,23,],[9,9,19,19,]),'main':([0,],[2,]),'commande':([18,24,34,40,],[20,28,28,42,]),'listeparamsmain':([7,13,],[10,16,]),'expression':([25,26,35,36,],[30,33,38,39,]),'typeetmain':([0,],[4,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> main","S'",1,None,None,None),
  ('expression -> NUMBER','expression',1,'p_expression','compilateur.py',55),
  ('expression -> ID','expression',1,'p_expression','compilateur.py',56),
  ('expression -> expression OPBIN expression','expression',3,'p_expression','compilateur.py',57),
  ('commande -> ID EQUAL expression','commande',3,'p_commande','compilateur.py',69),
  ('commande -> commande SEQ commande','commande',3,'p_commande','compilateur.py',70),
  ('commande -> WHILE LP expression RP LB commande RB','commande',7,'p_commande','compilateur.py',71),
  ('declaration -> INT ID','declaration',2,'p_declaration','compilateur.py',86),
  ('declaration -> FLOAT ID','declaration',2,'p_declaration','compilateur.py',87),
  ('listedeclarations -> declaration SEQ','listedeclarations',2,'p_listedeclarations','compilateur.py',101),
  ('listedeclarations -> declaration SEQ listedeclarations','listedeclarations',3,'p_listedeclarations','compilateur.py',102),
  ('listeparamsmain -> declaration','listeparamsmain',1,'p_listeparamsmain','compilateur.py',124),
  ('listeparamsmain -> declaration COMMA listeparamsmain','listeparamsmain',3,'p_listeparamsmain','compilateur.py',125),
  ('typeetmain -> INT MAIN','typeetmain',2,'p_typeetmain','compilateur.py',135),
  ('typeetmain -> FLOAT MAIN','typeetmain',2,'p_typeetmain','compilateur.py',136),
  ('main -> typeetmain LP listeparamsmain RP LB listedeclarations commande SEQ PRINT LP expression RP SEQ RB','main',14,'p_main','compilateur.py',145),
]
