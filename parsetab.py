
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'mainNUMBER ID OPBIN LP RP LB RB EQUAL SEQ COMMA INT FLOAT WHILE MAIN PRINT RETURNexpression : NUMBER\n                | ID\n                | expression OPBIN expressioncommande : ID EQUAL expression\n                | commande SEQ commande\n                | WHILE LP expression RP LB commande RB\n    \n    declaration : INT ID\n                | FLOAT ID\n    \n    listedeclarations : declaration SEQ\n                      | declaration SEQ listedeclarations\n    \n    listeparamsmain : declaration\n                   | declaration COMMA listeparamsmain\n    \n    typeetmain : INT MAIN\n         | FLOAT MAIN\n    \n    main : typeetmain LP listeparamsmain RP LB listedeclarations commande SEQ PRINT LP expression RP SEQ RB\n    '
    
_lr_action_items = {'PRINT':([26,],[32,]),'EQUAL':([21,],[25,]),'COMMA':([11,12,14,],[15,-8,-7,]),'LP':([1,6,7,20,32,],[5,-14,-13,24,36,]),'$end':([3,45,],[0,-15,]),'WHILE':([18,23,26,27,37,39,],[20,-9,20,-10,20,20,]),'RP':([9,11,12,14,17,28,29,30,38,40,],[13,-11,-8,-7,-12,-2,-1,35,-3,42,]),'SEQ':([12,14,19,22,28,29,31,33,38,41,42,43,],[-8,-7,23,26,-2,-1,-4,37,-3,37,44,-6,]),'FLOAT':([0,5,15,16,23,],[2,8,8,8,8,]),'RB':([28,29,31,33,38,41,43,44,],[-2,-1,-4,-5,-3,43,-6,45,]),'INT':([0,5,15,16,23,],[4,10,10,10,10,]),'OPBIN':([28,29,30,31,38,40,],[-2,-1,34,34,34,34,]),'LB':([13,35,],[16,39,]),'ID':([8,10,18,23,24,25,26,27,34,36,37,39,],[12,14,21,-9,28,28,21,-10,28,28,21,21,]),'MAIN':([2,4,],[6,7,]),'NUMBER':([24,25,34,36,],[29,29,29,29,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'typeetmain':([0,],[1,]),'listedeclarations':([16,23,],[18,27,]),'main':([0,],[3,]),'declaration':([5,15,16,23,],[11,11,19,19,]),'listeparamsmain':([5,15,],[9,17,]),'commande':([18,26,37,39,],[22,33,33,41,]),'expression':([24,25,34,36,],[30,31,38,40,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> main","S'",1,None,None,None),
  ('expression -> NUMBER','expression',1,'p_expression','compilateur.py',55),
  ('expression -> ID','expression',1,'p_expression','compilateur.py',56),
  ('expression -> expression OPBIN expression','expression',3,'p_expression','compilateur.py',57),
  ('commande -> ID EQUAL expression','commande',3,'p_commande','compilateur.py',69),
  ('commande -> commande SEQ commande','commande',3,'p_commande','compilateur.py',70),
  ('commande -> WHILE LP expression RP LB commande RB','commande',7,'p_commande','compilateur.py',71),
  ('declaration -> INT ID','declaration',2,'p_declaration','compilateur.py',86),
  ('declaration -> FLOAT ID','declaration',2,'p_declaration','compilateur.py',87),
  ('listedeclarations -> declaration SEQ','listedeclarations',2,'p_listedeclarations','compilateur.py',101),
  ('listedeclarations -> declaration SEQ listedeclarations','listedeclarations',3,'p_listedeclarations','compilateur.py',102),
  ('listeparamsmain -> declaration','listeparamsmain',1,'p_listeparamsmain','compilateur.py',124),
  ('listeparamsmain -> declaration COMMA listeparamsmain','listeparamsmain',3,'p_listeparamsmain','compilateur.py',125),
  ('typeetmain -> INT MAIN','typeetmain',2,'p_typeetmain','compilateur.py',135),
  ('typeetmain -> FLOAT MAIN','typeetmain',2,'p_typeetmain','compilateur.py',136),
  ('main -> typeetmain LP listeparamsmain RP LB listedeclarations commande SEQ PRINT LP expression RP SEQ RB','main',14,'p_main','compilateur.py',145),
]
